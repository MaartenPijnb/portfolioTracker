// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortfolioTracker.Model;

#nullable disable

namespace PortfolioTracker.Server.Migrations
{
    [DbContext(typeof(MPortfolioDBContext))]
    [Migration("20220429082323_AllDecimalPrecisionsMore")]
    partial class AllDecimalPrecisionsMore
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PortfolioTracker.Model.API", b =>
                {
                    b.Property<int>("APIId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("APIId"), 1L, 1);

                    b.Property<string>("APIKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("APIName")
                        .HasColumnType("int");

                    b.Property<string>("BaseUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("APIId");

                    b.ToTable("APIs", (string)null);

                    b.HasData(
                        new
                        {
                            APIId = 2,
                            APIKey = "not applicable",
                            APIName = 3,
                            BaseUrl = "not applicable"
                        },
                        new
                        {
                            APIId = 1,
                            APIKey = "6PoQCJV9O17jeUPS81UDN1sHJ86gKB4RahYraKSS",
                            APIName = 0,
                            BaseUrl = "https://yfapi.net"
                        });
                });

            modelBuilder.Entity("PortfolioTracker.Model.Asset", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetId"), 1L, 1);

                    b.Property<int>("APIId")
                        .HasColumnType("int");

                    b.Property<int>("AssetType")
                        .HasColumnType("int");

                    b.Property<string>("ISN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SymbolForApi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.HasKey("AssetId");

                    b.HasIndex("APIId");

                    b.ToTable("Assets", (string)null);

                    b.HasData(
                        new
                        {
                            AssetId = 1,
                            APIId = 1,
                            AssetType = 1,
                            ISN = "IE00B4L5Y983",
                            Name = "iShares Core MSCI World UCITS ETF USD (Acc)",
                            SymbolForApi = "IWDA.AS",
                            UpdatedOn = new DateTime(2022, 4, 29, 10, 23, 23, 177, DateTimeKind.Local).AddTicks(428),
                            Value = 0m
                        },
                        new
                        {
                            AssetId = 2,
                            APIId = 1,
                            AssetType = 1,
                            ISN = "IE00B4L5YC18",
                            Name = "iShares MSCI EM UCITS ETF USD (Acc)",
                            SymbolForApi = "IEMA.AS",
                            UpdatedOn = new DateTime(2022, 4, 29, 10, 23, 23, 177, DateTimeKind.Local).AddTicks(464),
                            Value = 0m
                        },
                        new
                        {
                            AssetId = 3,
                            APIId = 1,
                            AssetType = 4,
                            ISN = "BE0172903495",
                            Name = "Argenta Pensioenspaarfonds",
                            SymbolForApi = "0P00000NFB.F",
                            UpdatedOn = new DateTime(2022, 4, 29, 10, 23, 23, 177, DateTimeKind.Local).AddTicks(467),
                            Value = 0m
                        },
                        new
                        {
                            AssetId = 4,
                            APIId = 2,
                            AssetType = 5,
                            ISN = "Groepsverzekering IS",
                            Name = "Groepsverzekering IS",
                            SymbolForApi = "not applicable",
                            UpdatedOn = new DateTime(2022, 4, 29, 10, 23, 23, 177, DateTimeKind.Local).AddTicks(470),
                            Value = 0m
                        });
                });

            modelBuilder.Entity("PortfolioTracker.Model.Portfolio", b =>
                {
                    b.Property<int>("PortfolioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PortfolioId"), 1L, 1);

                    b.Property<int>("AssetID")
                        .HasColumnType("int");

                    b.Property<decimal>("AveragePricePerShare")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("Profit")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("ProfitPercentage")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("TotalInvestedValue")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("TotalShares")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("TotalValue")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("PortfolioId");

                    b.HasIndex("AssetID");

                    b.ToTable("Portfolio");
                });

            modelBuilder.Entity("PortfolioTracker.Model.PortfolioHistory", b =>
                {
                    b.Property<int>("PortfolioHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PortfolioHistoryId"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Percentage")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("Profit")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("TotalInvestedPortfolioValue")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("TotalPortfolioValue")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.HasKey("PortfolioHistoryId");

                    b.ToTable("PortfolioHistory");
                });

            modelBuilder.Entity("PortfolioTracker.Model.PortfolioTransaction", b =>
                {
                    b.Property<int>("PortfolioTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PortfolioTransactionId"), 1L, 1);

                    b.Property<decimal>("AmountOfShares")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<int>("BrokerType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurencyType")
                        .HasColumnType("int");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PricePerShare")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("TaxesCosts")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("TotalCosts")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("TransactionCosts")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("PortfolioTransactionId");

                    b.HasIndex("AssetId");

                    b.ToTable("Transactions", (string)null);
                });

            modelBuilder.Entity("PortfolioTracker.Model.Asset", b =>
                {
                    b.HasOne("PortfolioTracker.Model.API", "API")
                        .WithMany()
                        .HasForeignKey("APIId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("API");
                });

            modelBuilder.Entity("PortfolioTracker.Model.Portfolio", b =>
                {
                    b.HasOne("PortfolioTracker.Model.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("PortfolioTracker.Model.PortfolioTransaction", b =>
                {
                    b.HasOne("PortfolioTracker.Model.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });
#pragma warning restore 612, 618
        }
    }
}
